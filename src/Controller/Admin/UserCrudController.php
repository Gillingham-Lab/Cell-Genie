<?php
declare(strict_types=1);

namespace App\Controller\Admin;

use App\Entity\User;
use Doctrine\ORM\EntityManagerInterface;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Field\BooleanField;
use EasyCorp\Bundle\EasyAdminBundle\Field\IdField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;
use Symfony\Component\Form\Extension\Core\Type\PasswordType;
use Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface;

class UserCrudController extends AbstractCrudController
{
    public function __construct(
        private UserPasswordEncoderInterface $passwordEncoder,
    ) {
    }

    public static function getEntityFqcn(): string
    {
        return User::class;
    }

    public function persistEntity(EntityManagerInterface $entityManager, $entityInstance): void
    {
        if ($entityInstance->hasPlainPassword()) {
            $encodedPassword = $this->encodePassword($entityInstance, $entityInstance->getPlainPassword());
            $entityInstance->setPassword($encodedPassword);
        }

        parent::persistEntity($entityManager, $entityInstance); // TODO: Change the autogenerated stub
    }

    public function updateEntity(EntityManagerInterface $entityManager, $entityInstance): void
    {
        if ($entityInstance->hasPlainPassword()) {
            $encodedPassword = $this->encodePassword($entityInstance, $entityInstance->getPlainPassword());
            $entityInstance->setPassword($encodedPassword);
        }

        parent::updateEntity($entityManager, $entityInstance); // TODO: Change the autogenerated stub
    }

    private function encodePassword($user, $password)
    {
        return $this->passwordEncoder->encodePassword($user, $password);
    }

    public function configureFields(string $pageName): iterable
    {
        return [
            IdField::new("id")
                ->hideOnForm(),
            TextField::new("email"),
            TextField::new("fullName"),
            TextField::new("plainPassword")
                ->setFormType(PasswordType::class),
            BooleanField::new("isActive"),
            BooleanField::new("isAdmin"),
        ];
    }
}
