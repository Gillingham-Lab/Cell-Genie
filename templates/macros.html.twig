{% macro definition_row(n, d, url = none) %}
    <tr>
        <th scope="row">{{ n }}</th>
        {% if url %}
            <td><a href="{{ url }}">{{ d }}</a></td>
        {% else %}
            <td>{{ d }}</td>
        {% endif %}
    </tr>
{% endmacro %}

{% macro definition_row_raw(n, d) %}
    {# <dt class="col-sm-4">{{ n }}</dt>
    <dd class="col-sm-8">{{ d|raw }}</dd> #}
    <tr>
        <th>{{ n }}</th>
        <td>{{ d|raw }}</td>
    </tr>
{% endmacro %}

{% macro make_box(box, aliquotes, currentCell, currentAliquote = null) %}
    {% set contents = [] %}
    {% for aliquote in aliquotes %}
        {% for i in range(0, aliquote.vials-1) %}
            {% set contents = contents|merge([aliquote]) %}
        {% endfor %}
    {% endfor %}

    <svg id="svg-image-box-{{ box.ulid.toBase58 }}" width="100%" viewBox="-1 -1 201 201" style="width: 100%;">
        {%- if box.cols < box.rows -%}
            {% set s = 200/box.rows %}
        {%- else -%}
            {% set s = 200/box.cols %}
        {%- endif -%}

    {% set r = s/2*0.75 %}

    {# First, draw boxes #}
    {% for i in range(0, box.rows) %}
        {% for j in range(0, box.cols) %}
            {% set n = i*box.cols + j %}

            {% if n<contents|length %}
                {%- if currentAliquote -%}
                    {%- if currentAliquote.id == contents[n].id -%}
        <rect id="svg-image-box-{{ box.ulid.toBase58 }}-row-{{ i }}-col-{{ j }}" x="{{ j*s }}" y="{{ i*s }}" width="{{ s }}" height="{{ s }}" stroke="black" fill="skyblue" stroke-width="1px" />
                    {%- else -%}
        <rect id="svg-image-box-{{ box.ulid.toBase58 }}-row-{{ i }}-col-{{ j }}" x="{{ j*s }}" y="{{ i*s }}" width="{{ s }}" height="{{ s }}" stroke="lightgray" fill="none" stroke-width="1px" />
                    {%- endif -%}
                {%- else -%}
        <rect id="svg-image-box-{{ box.ulid.toBase58 }}-row-{{ i }}-col-{{ j }}"  x="{{ j*s }}" y="{{ i*s }}" width="{{ s }}" height="{{ s }}" stroke="lightgray" fill="none" stroke-width="1px" />
                {%- endif -%}
            {%- else -%}
        <rect id="svg-image-box-{{ box.ulid.toBase58 }}-row-{{ i }}-col-{{ j }}"  x="{{ j*s }}" y="{{ i*s }}" width="{{ s }}" height="{{ s }}" stroke="lightgray" fill="none" stroke-width="1px" />
            {%- endif -%}
        {% endfor %}
    {% endfor %}

    {# Secondly, draw above the boxes #}
    {% for i in range(0, box.rows) %}
        {% for j in range(0, box.cols) %}
            {% set n = i*box.cols + j %}

            {% if n<contents|length %}
                {%- if currentCell.id == contents[n].cell.id -%}
                    <a
                        href="{{ url("app_cell_aliquote_view", {"cellId": contents[n].cell.id, "aliquoteId": contents[n].id}) }}"
                        data-toggle="tooltip" data-placement="bottom"
                        title="{{ contents[n].cell.name }}, aliquote {{ contents[n].id }}, passage {{ contents[n].passage }},<br> vials left: {{ contents[n].vials }}<br>Mycoplasma: <span style='color: red;'>{{ contents[n].mycoplasmaResult }}</span>"
                    >
                        {% if contents[n].mycoplasmaResult == "positive" %}
                            <circle cx="{{ j*s+r/0.75 }}" cy="{{ i*s+r/0.75 }}" r="{{ r }}" fill="white" stroke="{{ contents[n].vialColor }}" stroke-width="2px"></circle>
                        {% else %}
                            <circle cx="{{ j*s+r/0.75 }}" cy="{{ i*s+r/0.75 }}" r="{{ r }}" fill="{{ contents[n].vialColor }}" stroke="black" stroke-width="2px"></circle>
                        {% endif %}
                    </a>
                {% else %}
                    <a
                        href="{{ url("app_cell_aliquote_view", {"cellId": contents[n].cell.id, "aliquoteId": contents[n].id}) }}"
                        data-toggle="tooltip" data-placement="bottom"
                        title="{{ contents[n].cell.name }}, aliquote {{ contents[n].id }}, passage {{ contents[n].passage }},<br> vials left: {{ contents[n].vials }}"
                    >
                        <circle cx="{{ j*s+r/0.75 }}" cy="{{ i*s+r/0.75 }}" r="{{ r }}" fill="gray" stroke="black" stroke-width="1px"></circle>
                    </a>
                {% endif %}

                {# Border for grouping aliquotes #}

                {# If top line, we can just draw the stroke #}
                {% if n < box.rows %}
                    <polyline points="{{ j*s }},{{ i*s }} {{ j*s+s }},{{ i*s }}" stroke="black" stroke-width="1px"></polyline>
                {% endif %}

                {# If first, we need to draw the stroke to the left, too #}
                {% if n == 0 %}
                    <polyline points="{{ j*s }},{{ i*s }} {{ j*s }},{{ i*s+s }}" stroke="black" stroke-width="1px"></polyline>
                {% endif %}

                {# For everything else, we draw the stroke to the bottom #}
                {% if n+box.cols in contents|keys and contents[n].id != contents[n+box.cols].id %}
                    <!-- Aliquote below is different -->
                    <polyline points="{{ j*s }},{{ i*s+s }} {{ j*s+s }},{{ i*s+s }}" stroke="black" stroke-width="1px"></polyline>
                {% elseif n+box.cols not in contents|keys %}
                    <!-- Aliquote below is empty -->
                    <polyline points="{{ j*s }},{{ i*s+s }} {{ j*s+s }},{{ i*s+s }}" stroke="black" stroke-width="1px"></polyline>
                {% else %}
                    <!-- Aliquote below is same -->
                {% endif %}

                {% if n+1 not in contents|keys %}
                    <!-- Next aliquote is empty -->
                    <polyline points="{{ j*s+s }},{{ i*s }} {{ j*s+s }},{{ i*s+s }}" stroke="black" fill="black" stroke-width="1px"></polyline>
                {% elseif contents[n].id != contents[n+1].id %}
                    <!-- Next aliquote is different aliquote -->
                    <polyline points="{{ j*s+s }},{{ i*s }} {{ j*s+s }},{{ i*s+s }}" stroke="black" stroke-width="1px"></polyline>
                {% else %}
                    <!-- Next aliquote is same aliquote -->
                {% endif %}
            {% else %}
            {% endif %}
        {% endfor %}
    {% endfor %}
    </svg>
{% endmacro %}

{% macro vendor_url(vendor, pn) %}
    {% if vendor %}
        {% if pn %}
            {% if "{pn}" in vendor.catalogUrl %}
                {% set vendor_url = vendor.catalogUrl|replace({"{pn}": pn}) %}
            {% else %}
                {% set vendor_url = vendor.catalogUrl ~ pn %}
            {% endif %}
        {% else %}
            {% set vendor_url = vendor.catalogUrl|replace({"{pn}": ""}) %}
        {% endif %}

        <a href="{{ vendor_url }}">{{ vendor }}{% if pn %} ({{ pn }}){% endif %} <span class="fa fa-external-link-alt"></span></a>
    {% endif %}
{% endmacro %}

{% macro validation_status(antibody) %}
    {% if antibody.validatedInternally %}
        <span class="text-success">✓</span>
    {% endif %}

    {% if antibody.validatedExternally %}
        {% if antibody.externalReference %}
            <a class="text-warning" href="https://doi.org/{{ antibody.externalReference }}">✓</a>
        {% else %}
            <span class="text-warning">✓</span>
        {% endif %}
    {% endif %}
{% endmacro %}

{% macro rrid_resolver(rrid) %}
    {% if rrid %}
        <a href="https://scicrunch.org/resolver/{{ rrid }}">{{ rrid }} <span class="fa fa-external-link-alt"></span></a>
    {% else %}
        (missing)
    {% endif %}
{% endmacro %}

{% macro cell_resolver(cell) %}
    {% if cell.cellNumber %}
        {{ url("app_cell_view_number", {"cellNumber": cell.cellNumber}) }}
    {% else %}
        {{ url("app_cell_view", {"cellId": cell.id}) }}
    {% endif %}
{% endmacro %}

{% macro pillify(objects) %}
    {% for object in objects %}
        {% if object is substance %}
            {{ _self.pillify_substance(object) }}
        {% elseif object is cell %}
            {{ _self.pillify_cell(object) }}
        {% elseif object is lot %}
            {% set substance = object[0] %}
            {% set lot = object[1] %}

            {{ _self.pillify_lot(substance, lot) }}
        {% else %}
        {% endif %}
    {% endfor %}
{% endmacro %}

{% macro pillify_substances(substances) %}
    {% for substance in substances %}
        {{  _self.pillify_substance(substance) }}
    {% endfor %}
{% endmacro %}

{% macro pillify_substance(substance) %}
    {% from 'utility/icons.html.twig' import any as any_icon %}
    {% if substance is null %}
        <span class="badge round bg-white border-dark">null</span>
    {% elseif substance is substance %}
        {% if substance is substanceAntibody %}
            <a class='badge rounded-pill bg-primary text-light text-decoration-none' href="{{ url("app_substance_view", {"substance": substance.ulid}) }}">{{ any_icon(substance) }} {{ substance.number }}</a>
        {% else %}
            <a class='badge rounded-pill bg-primary text-light text-decoration-none' href="{{ url("app_substance_view", {"substance": substance.ulid}) }}">{{ any_icon(substance) }} {{ substance.shortName }}</a>
        {% endif %}
    {% else %}
        ??
    {% endif %}
{% endmacro %}

{% macro pillify_lot(substance, lot) %}
    {% from 'utility/icons.html.twig' import any as any_icon %}
    {% if substance is null %}
        <span class="badge round bg-white border-dark">null</span>
    {% elseif substance is substance %}
        {% if substance is substanceAntibody %}
            <a class='badge rounded-pill bg-dark text-light text-decoration-none' href="{{ url("app_substance_lot_view", {"lot": lot.id}) }}">{{ any_icon(substance) }} {{ substance.number }}.{{ lot.number }}</a>
        {% else %}
            <a class='badge rounded-pill bg-dark text-light text-decoration-none' href="{{ url("app_substance_lot_view", {"lot": lot.id}) }}">{{ any_icon(substance) }} {{ substance.shortName }}.{{ lot.number }}</a>
        {% endif %}
    {% else %}
        ??
    {% endif %}
{% endmacro %}

{% macro pillify_proteins(proteins) %}
    {% for protein in proteins %}
        <a class='badge rounded-pill bg-primary text-light' href='{{ url("app_protein_view", {"proteinId": protein.ulid}) }}'>{{ protein }}</a>
    {% endfor %}
{% endmacro %}

{% macro pillify_epitopes(epitopes, link_to_antobodies = false) %}
    {% from 'utility/icons.html.twig' import epitope as epitope_icon %}
    {% for epitope in epitopes %}
        <a class='badge rounded-pill bg-warning text-decoration-none text-light' href='{{ url("app_epitope_view", {"epitope": epitope.id}) }}'>{{ epitope_icon() }} {{ epitope }}</a>
    {% endfor %}
{% endmacro %}

{% macro pillify_cell(cell) %}
    {% from 'utility/icons.html.twig' import cell as cell_icon %}
    {% if cell is null %}
        <span class="badge round bg-white border-dark">null</span>
    {% elseif cell is cell %}
        <a class='badge rounded-pill bg-info text-light text-decoration-none' href="{{ _self.cell_resolver(cell) }}">{{ cell_icon() }} {{ cell.cellNumber }} {{ cell.name }}</a>
    {% else %}
        ??
    {% endif %}
{% endmacro %}

{% macro tab_item(name, id, tabid, active=false, enabled=true) %}
    <a class="nav-link {{ active?"active":"" }} {{ enabled ? "" : "disabled" }}" id="{{ id }}" data-toggle="pill" href="#{{ tabid }}" role="tab" aria-controls="{{ tabid }}" aria-selected="{{ active?"true":"false" }}">{{ name }}</a>
{% endmacro %}

{% macro simple_tab_content(name, content, comment=null) %}
    <div class="col-4 mb-3 pb-3">
        <h4 class="bg-secondary p-2 mb-n1 border-secondary border">{{ name }}</h4>
        <div class="p-2 pt-3 border-secondary border">
            {{ (content ?? "unknown")|raw }}

            {% if comment %}
                <p class="text-muted mt-3 mb-n1">{{ comment }}</p>
            {% endif %}
        </div>
    </div>
{% endmacro %}

{% macro detail_link(entity, route, idVariable) %}
    {% if entity.id is defined %}
        {% set route_params = {(idVariable): entity.id} %}
    {% else %}
        {% set route_params = {(idVariable): entity.ulid} %}
    {% endif %}
    <a
            href="{{ url(route, route_params) }}"
            data-toggle="tooltip" data-placement="bottom" title="{{ entity.longName }}"
    >{{ entity.shortName }}</a>
{% endmacro %}

{% macro truncate_string(string, length=30) %}
    <span data-toggle="tooltip" data-placement="bottom" title="{{ string }}">{{ string|u.truncate(30, "…") }}</span>
{% endmacro %}

{% macro chemlink(chem) %}
    {{ _self.detail_link(chem, "app_compound_view", "compoundId") }}
{% endmacro %}

{% macro proteinlink(protein) %}
    {{ _self.detail_link(protein, "app_protein_view", "proteinId") }}
{% endmacro %}