{% macro display_consumable_card(consumable, currentConsumable) %}
    <div class="col mb-3">
        <div class="border border-1 border-black rounded-1">
            <div class="bg-light p-2 rounded-top-1">
                <div class="d-flex justify-content-between align-items-start">
                    <div class="d-inline-block">
                        <div class="fw-bold"><a class="text-decoration-none text-black text-reset" href="{{ path("app_consumables_item_view", {"consumable": consumable.id}) }}">{{ consumable.longName }}</a></div>
                        PN: {{ consumable.productNumber }}
                    </div>

                    <div class="d-inline-block">
                        <div>{{ _self.consumable_tools(consumable) }}</div>
                    </div>
                </div>
            </div>

            <div class="border-top border-bottom" style="max-height: 15rem; min-height: 15rem; overflow: clip;">
                {% if consumable.visualisation %}
                    <figure  style="overflow: clip;">
                        <img src="{{ path("picture", {"id": consumable.visualisation.id}) }}" class="img-fluid">
                    </figure>
                {% else %}
                    <div class="align-content-center align-middle text-center">
                        <div class="align-middle"></div>
                    </div>
                {% endif %}
            </div>

            <div class="p-2 rounded-bottom-1">
                <div style="max-height: 6rem; overflow-x: clip; overflow-y: scroll;">
                    {{ consumable.comment|raw }}
                </div>

                {# Stock meter for a consumable #}
                {% set consumableStock = consumable.currentStock / consumable.idealStock %}
                {% set orderedStock = consumable.orderedStock / consumable.idealStock %}
                {% set barColor = "bg-success" %}

                {% if consumable.currentStock < consumable.criticalLimit %}
                    <span class="text-danger"><strong>Critical:</strong> Orders must be placed</span>
                    {% set barColor = "bg-danger" %}
                {% elseif consumable.currentStock < consumable.orderLimit %}
                    <span class="text-warning"><strong>Warning:</strong> Orders should be placed</span>
                    {% set barColor = "bg-warning" %}
                {% endif %}

                <div class="progress border border-1 border-black bg-white" role="progressbar" aria-label="Stock">
                    <div class="progress-bar {{ barColor }}" style="width: {{ consumableStock*100 }}%"
                         role="progressbar"
                         aria-valuemin="0" aria-valuemax="{{ consumable.idealStock }}" aria-valuenow="{{ consumable.currentStock }}"
                    >
                        {{ consumable.currentStock }} / {{ consumable.idealStock }}
                    </div>

                    {% if consumableStock < 1 %}
                        <div class="progress-bar progress-bar-striped bg-primary-subtle text-black" style="width: {{ orderedStock*100 }}%"
                             aria-valuemin="0" aria-valuemax="{{ consumable.idealStock }}" aria-valuenow="{{ consumable.orderedStock }}"
                        >
                            {{ consumable.orderedStock }}
                        </div>
                    {% else %}
                        <div class="progress-bar progress-bar-striped bg-primary-subtle text-black" style="width: 5%"
                             aria-valuemin="0" aria-valuemax="{{ consumable.idealStock }}" aria-valuenow="{{ consumable.orderedStock }}"
                        >
                            {{ consumable.orderedStock }}
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
{% endmacro %}

{% macro consumable_tools(consumable, toolbar = false) %}
    {% import 'layout.html.twig' as layout %}

    {% set tools = [
        {
            "type": "edit",
            "target": url("app_consumables_item_edit", {"consumable": consumable.id}),
            "tooltipText": "Edit consumable",
            "disabled": not is_granted("edit", consumable)
        }
    ] %}

    {% if toolbar %}
        {# If toolbar, we also add the "go above" button #}

        {% set tools = [{
            "type": "up",
            "target": url("app_consumables_category_view", {"category": consumable.category.id}),
            "tooltipText": "Go to category",
            "disabled": not is_granted("view", consumable.category),
        }]|merge(tools) %}

        {# Display toolbar #}
        {{ layout.toolbox(tools) }}
    {% else %}
        {{ layout.toolbox_column(tools, "sm") }}
    {% endif %}
{% endmacro %}